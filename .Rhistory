read.csv(file())
file()
read.csv(file())
read.csv("NBA_season_stats.csv")
file()
NBA_season_stats <- file(read.csv("NBA_season_stats.csv"))
NBA_season_stats <- read.csv(file("NBA_season_stats.csv"))
NBA_season_stats <- read.csv(file())
NBA_season_stats <- file()
rm(lists=ls())
rm(lists=ls())
rm(list = ls())
NBA_stats <- read.csv(file.choose())
NBA_stats <- read.csv(file.choose())
view(NBA_stats)
View(NBA_stats)
NBA_stats_90s <- subset(NBA_stats , "Year" >= 1990 & "Year" < 2000)
View(NBA_stats_90s)
rm(NBA_stats_90s)
View(NBA_stats)
View(NBA_stats)
NBA_stats_90s <- subset(NBA_stats , Year >= 1990 & Year < 2000 , )
View(NBA_stats_90s)
NBA_stats_00s <- subset(NBA_stats , Year >= 2000 & Year < 2010 , )
NBA_stats_80s <- subset(NBA_stats , Year >= 1980 & Year < 1990 , )
NBA_stats_2010s <- subset(NBA_stats , Year >=2010 , )
View(NBA_stats_2010s)
View(NBA_stats_2010s)
install.packages("dplyr")
install.packages(ggplot2)
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
NBA_Stats <- read.csv(file.choose())
NBA_Stats %>%
filter(year == 2008)
view(NBA_Stats)
View(NBA_Stats)
NBA_Stats %>%
filter(Player == "Stephen Curry")
NBA_Stats_Curry <- NBA_Stats %>%
filter(Player == "Stephen Curry")
View(NBA_Stats_Curry)
ggplot(NBA_Stats_Curry , aes(x = Year , y = X3P , size = X3PA)) + geom_point()
?summarize
NBA_Stats %>%
group_by(Year) %>%
summarize(X3PM = sum(X3P.))
NBANBA_Stats %>%
+ group_by(Year) %>%
+ summarize(X3PM = sum(X3P))
NBA_Stats %>%
+ group_by(Year) %>%
+ summarize(X3PM = sum(X3P))
NBA_Stats %>%
+ group_by(Year) %>%
+ summarize(X3PM = sum(X3P))
NBA_Stats %>%
+ group_by(Year) %>%
+ summarize(X3PM = sum(X3P))
NBA_Stats %>%
+ group_by(Year) %>%
+ summarize(X3PM = sum(X3P))
NBA_Stats %>%
+ group_by(Year) %>%
+ summarize(X3PM = sum(X3PA))
NBA_Stats_50s <- NBA_Stats %>%
filter(Year >= 1950 & Year < 1960)
NBA_Stats_60s <- NBA_Stats %>%
filter(Year >= 1960 & Year < 1970)
NBA_Stats_70s <- NBA_Stats %>%
filter(Year >= 1970 & Year < 1980)
NBA_Stats_80s <- NBA_Stats %>%
filter( Year >= 1980 & Year < 1990)
NBA_Stats_90s <- NBA_Stats %>%
filter(Year >= 1990 & Year < 2000)
NBA_Stats_00s <- NBA_Stats %>%
filter(Year >= 2000 & Year < 2010)
NBA_Stats_10s <- NBA_Stats %>%
filter(Year >= 2010)
rm(NBA_Stats_Curry)
library(dplyr)
library(ggplot2)
NBA_Stats_00s %>%
group_by(Tm, Year) %>%
summarize(X3PAt = mean(X3PA)) %>%
ggplot(aes(x = Year, y = X3PAt, color = Tm )) + geom_line()
NBA_Stats_10s %>%
group_by(Tm, Year) %>%
summarize(X3PAt = mean(X3PA)) %>%
ggplot(aes(x = Year, y = X3PAt, color = Tm )) + geom_line()
View(NBA_Stats_00s)
group_by(Player) %>%
ggplot(aes(x = PER, y = X3PAt)) + geom_point()
library(dplyr)
library(ggplot2)
group_by(Player) %>%
ggplot(aes(x = PER, y = X3PAt)) + geom_point()
NBA_Stats_10s %>%
filter(Pos == PG | Pos == SG , Year == 2008)
NBA_Stats_10s %>%
filter(Pos == "PG" | Pos == "SG" , Year == 2008)
NBA_Stats_10s %>%
filter(Pos == "PG" | Pos == "SG" , Year == 2008) %>%
ggplot(aes(x = PER, y = X3PAt)) + geom_point()
NBA_Stats_10s %>%
filter(Pos == "PG" | Pos == "SG" , Year == 2008) %>%
ggplot(aes(x = PER, y = X3PA)) + geom_point()
NBA_Stats_10s %>%
filter(Pos == "PG" | Pos == "SG" , Year == 2008) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3PA)) + geom_point()
NBA_Stats_10s %>%
filter( Year == 2008, Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3PA)) + geom_point()
NBA_Stats_10s %>%
filter( Year == 2008, Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_point()
?filter
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_point()
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_point() + scale_y_log10()
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_point() + scale_y_loge()
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_point() + scale_y_continuous()
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_point() + scale_x_log10()
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER, y = X3P.)) + geom_boxplot()
NBA_Stats_10s %>%
filter( Year == 2008 & Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER)) + geom_histogram()
NBA_Stats %>%
filter( Pos == "PG" | Pos == "SG" ) %>%
group_by(Player) %>%
ggplot(aes(x = PER)) + geom_histogram()
NBA_Stats %>%
group_by(Player) %>%
ggplot(aes(x = PER)) + geom_histogram()
NBA_Stats %>%
group_by(Player) %>%
ggplot(aes(x = X3PA)) + geom_histogram()
NBA_Stats_10s %>%
NBA_Stats_10s %>%
group_by(Player) %>%
ggplot(aes(x = X3PA)) + geom_histogram()
NBA_Stats_00s %>%
group_by(Player) %>%
ggplot(aes(x = X3PA)) + geom_histogram()
NBA_Stats_00s %>%
group_by(Player) %>%
ggplot(aes(x = X3PA)) + geom_histogram() + ggtitle("Distribution of NBA 3 Point Attempts 2000-2009")
NBA_Stats_00s %>%
group_by(Player) %>%
ggplot(aes(x = X3PM)) + geom_histogram() + ggtitle("Distribution of NBA 3 Point Attempts 2000-2009")
NBA_Stats_00s %>%
group_by(Player) %>%
ggplot(aes(x = X3P)) + geom_histogram() + ggtitle("Distribution of NBA 3 Point Attempts 2000-2009")
NBA_Stats_00s %>%
group_by(Player) %>%
summarize(X3Pavg = mean(X3P))
NBA_Stats_00s %>%
group_by(Player) %>%
summarize(X3Pavg = mean(X3P)) %>%
ggplot(aes(x = X3P)) + geom_histogram() + ggtitle("Distribution of NBA 3 Point Attempts 2000-2009")
NBA_Stats_00s %>%
group_by(Player) %>%
summarize(X3Pavg = mean(X3P)) %>%
ggplot(aes(x = X3Pavg)) + geom_histogram() + ggtitle("Distribution of NBA 3 Point Attempts 2000-2009")
NBA_Stats_00s %>%
group_by(Player) %>%
summarize(X3Pavg = mean(X3P)) %>%
ggplot(aes(x = X3Pavg)) + geom_histogram() + ggtitle("Distribution of NBA 3 Point Attempts 2000-2009") + scale_x_log10()
dir()
setwd(file.path(C:\Users\iozeroff\OneDrive - Earthwatch\Desktop\R Projects\NBA Statistical Study))
wdpath <- file.path("C:\Users\iozeroff\OneDrive - Earthwatch\Desktop\R Projects\NBA Statistical Study")
setwd(("C:\\Users\\iozeroff\\OneDrive - Earthwatch\Desktop\R Projects\\NBA Statistical Study")
View(NBA_Stats)
View(NBA_Stats)
View(NBA_Stats)
View(NBA_Stats)
windowsFont()
windowsFonts()
install.packages("extrafont")
library(extrafont)
font_import()
fonts()
?import_font
?font_import
?loadfonts
# Registers additional fonts from extrafont package to be used in pdf, postscript, or Windows bitmap output.
# loadfont must be run once each R session in order to use theme_ew.
loadfonts(quiet = TRUE)
theme_ew <- function(base_size = 11, base_family = "",
base_line_size = base_size / 22,
base_rect_size = base_size / 22) {
half_line <- base_size / 2
theme_minimal(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) %+replace%
# Elements in this first block aren't used directly, but are inherited
# by others
theme(
line =  element_line(
colour = "black", size = base_line_size,
linetype = 1, lineend = "butt"
),
rect =  element_rect(
fill = "white", colour = "black",
size = base_rect_size, linetype = 1
),
text =  element_text(
family = "Trebuchet MS", face = "plain",
colour = ew_cols("dark gray"), size = base_size,
lineheight = 0.9, hjust = 0.5, vjust = 0.5, angle = 0,
margin = margin(), debug = FALSE
)
)
}
ggplot(iris, aes(x = Sepal.Width, y = Petal.Width)) +
geom_point() +
theme_ew()
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
library(extrafont)
ggplot(iris, aes(x = Sepal.Width, y = Petal.Width)) +
geom_point() +
theme_ew()
source('C:/Users/iozeroff/OneDrive - Earthwatch/Desktop/R Projects/NBA Statistical Study/NBA Statistical Project/theme_ew.r', echo=TRUE)
# Registers additional fonts from extrafont package to be used in pdf, postscript, or Windows bitmap output.
# loadfont must be run once each R session in order to use theme_ew.
loadfonts(device = "win",quiet = TRUE)
warnings()
ggplot(iris, aes(x = Sepal.Width, y = Petal.Width)) +
geom_point() +
theme_ew()
# Registers additional fonts from extrafont package to be used in pdf, postscript, or Windows bitmap output.
# loadfont must be run once each R session in order to use theme_ew.
loadfonts(device = "win",quiet = TRUE)
theme_ew <- function(base_size = 11, base_family = "",
base_line_size = base_size / 22,
base_rect_size = base_size / 22) {
half_line <- base_size / 2
theme_minimal(
base_size = base_size,
base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size
) %+replace%
# Elements in this first block aren't used directly, but are inherited
# by others
theme(
line =  element_line(
colour = "black", size = base_line_size,
linetype = 1, lineend = "butt"
),
rect =  element_rect(
fill = "white", colour = "black",
size = base_rect_size, linetype = 1
),
text =  element_text(
family = "Trebuchet MS", face = "plain",
colour = ew_cols("dark gray"), size = base_size,
lineheight = 0.9, hjust = 0.5, vjust = 0.5, angle = 0,
margin = margin(), debug = FALSE
)
)
}
ggplot(iris, aes(x = Sepal.Width, y = Petal.Width)) +
geom_point() +
theme_ew()
ggplot(iris, aes(x = Sepal.Width, y = Petal.Width)) +
geom_point() +
ggtitle("Sepal Width vs. Petal Width")
iris
ggplot(iris, aes(x = Sepal.Width, y = Petal.Width, fill = Species)) +
geom_point() +
ggtitle("Sepal Width vs. Petal Width")
# Note that vignettes require knitr and rmarkdown
install.packages('knitr')
install.packages('rmarkdown')
install.packages('MazamaSpatialUtils')
devtools::install_github('MazamaScience/MazamaCoreUtils')
devtools::install_github('MazamaScience/AirSensor')
source('~/.active-rstudio-document', echo=TRUE)
install.packages('MazamaSpatialUtils')
devtools::install_github('MazamaScience/MazamaCoreUtils')
install.packages("MazamaSpatialUtils")
library(MazamaSpatialUtils)
library(MazamaSpatialUtils)
?`MazamaSpatialUtils-package`
devtools::install_github('MazamaScience/AirSensor')
devtools::install_github('MazamaScience/MazamaCoreUtils')
devtools::install_github('MazamaScience/AirSensor')
update.packages()
devtools::install_github('MazamaScience/MazamaCoreUtils')
?MazamaSpatialUtils
?AirSensor
?vignettes
vignette(MazamaCoreUtils)
vignette("MazamaSpatialUtils")
library(MazamaCoreUtils)
vignette(MazamaCoreUtils)
source('~/.active-rstudio-document', echo=TRUE)
1
library(MazamaCoreUtils)
vignette("MazamaCoreUtils")
vignette(package = "MazamaCoreUtils")
?AirSensor
devtools::install_github('MazamaScience/AirSensor')
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
devtools::install_github('MazamaScience/AirSensor')
library(AirSensor)
vignette(AirSensor)
vignette([ackage = "AirSensor"])
vignette(package = "AirSensor")
library(AirSensor)
vignette()
devtools::install_github('MazamaScience/AirSensor', build_vignettes = TRUE)
devtools::install_github('MazamaScience/AirSensor', build_vignettes = TRUE, force = TRUE)
vignette(package="AirSensor")
setwd("C:/Users/iozeroff/OneDrive - Earthwatch/Desktop/Data-Science/Python-Projects/oha-ups")
